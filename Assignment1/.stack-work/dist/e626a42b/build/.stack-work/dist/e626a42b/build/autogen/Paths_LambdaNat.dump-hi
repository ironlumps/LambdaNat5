
==================== FINAL INTERFACE ====================
2019-10-02 22:50:49.5577552 UTC

interface LambdaNat-0.1.0.0-EvitBjaHhSP7BnBJ5PUt9C:Paths_LambdaNat 8064
  interface hash: 2c277f9445fa9014a676a68e45a4eaad
  ABI hash: b1e2780a0da82109de26066882ceec13
  export-list hash: 227ee2b767cf8075120f28f10151dde4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c6861be289831bcb116d4e76eb4438bc
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Paths_LambdaNat.getBinDir
  Paths_LambdaNat.getDataDir
  Paths_LambdaNat.getDataFileName
  Paths_LambdaNat.getDynLibDir
  Paths_LambdaNat.getLibDir
  Paths_LambdaNat.getLibexecDir
  Paths_LambdaNat.getSysconfDir
  Paths_LambdaNat.version
module dependencies:
package dependencies: base-4.12.0.0* ghc-prim-0.5.3
                      integer-gmp-1.0.2.0
orphans: base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity base-4.12.0.0:Data.Monoid
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
import  -/  base-4.12.0.0:Control.Exception cfc703247f46cac86fbede9415dcbc0b
import  -/  base-4.12.0.0:Data.Version 83bcb71c3bbc6e9e7ea2856c48efa168
import  -/  base-4.12.0.0:GHC.Base 954f4c258d193fab7048a63bfeb56dcf
import  -/  base-4.12.0.0:GHC.IO 83f83859bdb7dbbe970dd7fd763b40dc
import  -/  base-4.12.0.0:GHC.IO.Exception e15253bb76fd787961e34fa61ed7ccb5
import  -/  base-4.12.0.0:Prelude aea9afd24db8aed3563d7d850ea453c0
import  -/  base-4.12.0.0:System.Environment 15515764821c8512acc49c05e436e6d4
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
addDependentFile "C:\Users\Charlie Story\AppData\Local\Programs\stack\x86_64-windows\ghc-8.6.4\lib\include\ghcversion.h" a0ce8aeb7f525f4d70decd6c1d3ca2dd
addDependentFile ".stack-work\dist\e626a42b\build\autogen\cabal_macros.h" d06ee0050c9b13795ed17be7333a365e
d6c1237a955932dbe0bce010a5bff9c5
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Paths_LambdaNat.$trModule3
                   Paths_LambdaNat.$trModule1) -}
1d96163212218ddd8a58394a5a7e1698
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_LambdaNat.$trModule2) -}
77a9a3c91210d563f6adc069c6f8ac64
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Paths_LambdaNat"#) -}
c9c4666096223e62dab9516ecc8fd443
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Paths_LambdaNat.$trModule4) -}
79d2c822e3fefe23e4cbc4c77856b7f8
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("LambdaNat-0.1.0.0-EvitBjaHhSP7BnBJ5PUt9C"#) -}
438c207ec032a5577bbb2e2b10ffa3fd
  getBinDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getBinDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
468614cc3bc3dc8c86e623dc2320dd9f
  getBinDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getBinDir5
                   Paths_LambdaNat.getBinDir2
                   eta) -}
39c5a09d391839eaa8a36f7c5f12371e
  getBinDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getBinDir3 #) } }) -}
b019f4d7726627290ac64fc05f567e0c
  getBinDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getBinDir4) -}
ae12f3509ad764825816f78f181672ca
  getBinDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\bin"#) -}
b8fa3dd1e7f6f9a0cf8a8aeebd21e2dc
  getBinDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getBinDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getBinDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
e97ebd04f4de68f49c4f0ac4c2ee7f15
  getBinDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getBinDir7) -}
d8160f235049f66d4864693317a1f446
  getBinDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_bindir"#) -}
65ab4fda4bfba697a171a863dbaf9df7
  getDataDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getDataDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
ea7a72d7d9fd166f2804c9c82d05a863
  getDataDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getDataDir5
                   Paths_LambdaNat.getDataDir2
                   eta) -}
7480fe0429ea07d70f6a97e523d7498c
  getDataDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getDataDir3 #) } }) -}
bd3fb77ed9f79ef9c370d4d3ee951e76
  getDataDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getDataDir4) -}
c20fba6e1ba2ffe0b8a5647f65ee120d
  getDataDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\share\\x86_64-windows-ghc-8.6.4\\LambdaNat-0.1.0.0"#) -}
14744e078d46dfb694e4b4d21bf83f5f
  getDataDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getDataDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getDataDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
a31901d9ae2cb43702ea92c02e4966e1
  getDataDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getDataDir7) -}
8d8b9df17a048d139f5fe2da46f846eb
  getDataDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_datadir"#) -}
cd0ce5fa8d85dd19c7d8e0d317cac1cc
  getDataFileName :: GHC.IO.FilePath -> GHC.Types.IO GHC.IO.FilePath
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getDataFileName1
                  `cast`
                (<GHC.IO.FilePath>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.IO.FilePath>_R)) -}
b6a93754dd3ec598b0f5f460f87fc9cd
  getDataFileName1 ::
    GHC.IO.FilePath
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.IO.FilePath #)
  {- Arity: 2, Strictness: <L,U><S,U>,
     Unfolding: (\ (name :: GHC.IO.FilePath)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case GHC.Prim.catch#
                        @ GHC.Base.String
                        @ GHC.Exception.Type.SomeException
                        Paths_LambdaNat.getDataDir5
                        Paths_LambdaNat.getDataDir2
                        s of ds1 { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Base.++
                      @ GHC.Types.Char
                      ipv1
                      (GHC.CString.unpackAppendCString#
                         Paths_LambdaNat.getDataFileName2
                         name) #) }) -}
d779dcd8ff0b59557fb15e7f0ed8734a
  getDataFileName2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("\\"#) -}
203a564433e43145107ba718561fa018
  getDynLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getDynLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
16d33bf37b512ceba8ac01882310a5b0
  getDynLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getDynLibDir5
                   Paths_LambdaNat.getDynLibDir2
                   eta) -}
14155ea9e3f1ac746b7783eb6eba2bf6
  getDynLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getDynLibDir3 #) } }) -}
cd7f2283a2cb20517f435d82685ac046
  getDynLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getDynLibDir4) -}
f2957beae0167d8183c615bd696cf2d3
  getDynLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\lib\\x86_64-windows-ghc-8.6.4"#) -}
612bda6b42ee3ce4e5af7d7573951132
  getDynLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getDynLibDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getDynLibDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
7f4ad2a41502ec774991f5fdb651c66d
  getDynLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getDynLibDir7) -}
8deea6afbca81ee434a66517eee703a0
  getDynLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_dynlibdir"#) -}
dc3482f0894be8477d977ca228bcc195
  getLibDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getLibDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
c6d9bfe1c5f52ca4c81e00e7d0a9e927
  getLibDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getLibDir5
                   Paths_LambdaNat.getLibDir2
                   eta) -}
b173a551cf085119e562f18fcd8f7f39
  getLibDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getLibDir3 #) } }) -}
a13561298edb787ad81b56ad83707adc
  getLibDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getLibDir4) -}
3c3a1c55ed0f7dbc5c4d62dd3af1abb3
  getLibDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\lib\\x86_64-windows-ghc-8.6.4\\LambdaNat-0.1.0.0-EvitBjaHhSP7BnBJ5PUt9C"#) -}
0cf99212686495ba84f28620f4c8edf5
  getLibDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getLibDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getLibDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
734b1f38f83fa7bdc22ffa430b86319e
  getLibDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getLibDir7) -}
c97587fbc25920ce75c6a656435e5383
  getLibDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_libdir"#) -}
3d7cace0ae216ce0998efdf28bb1ba0c
  getLibexecDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getLibexecDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
d74f765e13b1f3edba1ca7ed836ef4f1
  getLibexecDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getLibexecDir5
                   Paths_LambdaNat.getLibexecDir2
                   eta) -}
efc6b99b75b974a21be873f4570b31b9
  getLibexecDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getLibexecDir3 #) } }) -}
a77a19c9af5764a478b528921db5ab85
  getLibexecDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getLibexecDir4) -}
093774cc01225aae8be37273b5337533
  getLibexecDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\libexec\\x86_64-windows-ghc-8.6.4\\LambdaNat-0.1.0.0"#) -}
237a1da8ef84a33f5256710bd55615af
  getLibexecDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getLibexecDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getLibexecDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
b7beca20a2195294f1082fe56e2ae6bc
  getLibexecDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getLibexecDir7) -}
bc0ad757d102d1e38494ab4e5f9e6326
  getLibexecDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_libexecdir"#) -}
1d0054cda20ba85bf160d4a2500af461
  getSysconfDir :: GHC.Types.IO GHC.IO.FilePath
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Paths_LambdaNat.getSysconfDir1
                  `cast`
                (Sym (GHC.Types.N:IO[0] <GHC.Base.String>_R)) -}
666e5ea7815e32eb857266e4b933fc2d
  getSysconfDir1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (eta :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 GHC.Prim.catch#
                   @ GHC.Base.String
                   @ GHC.Exception.Type.SomeException
                   Paths_LambdaNat.getSysconfDir5
                   Paths_LambdaNat.getSysconfDir2
                   eta) -}
c3c42576d243bd4aa8099e4994e6f2ae
  getSysconfDir2 ::
    GHC.Exception.Type.SomeException
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: (\ (e1 :: GHC.Exception.Type.SomeException)[OneShot]
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case e1 of wild { GHC.Exception.Type.SomeException e2 $dException1 e3 ->
                 case Data.Typeable.Internal.sameTypeRep
                        @ *
                        @ *
                        @ e2
                        @ GHC.IO.Exception.IOException
                        (GHC.Exception.Type.$p1Exception @ e2 $dException1)
                          `cast`
                        (Data.Typeable.Internal.N:Typeable[0] <*>_N <e2>_N)
                        GHC.IO.Exception.$fExceptionIOException4 of wild1 {
                   GHC.Types.False
                   -> GHC.Prim.raiseIO#
                        @ GHC.Exception.Type.SomeException
                        @ GHC.Base.String
                        wild
                        eta
                   GHC.Types.True -> (# eta, Paths_LambdaNat.getSysconfDir3 #) } }) -}
4dff759be23c43c447256246cbd532ab
  getSysconfDir3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getSysconfDir4) -}
938494386ba114b0d5da7df44bbc00e5
  getSysconfDir4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("C:\\Users\\Charlie Story\\Documents\\GitHub\\LambdaNat5\\Assignment1\\.stack-work\\install\\f33caf5a\\etc"#) -}
fe712287efbc5a83b37bd7a0b5c30cde
  getSysconfDir5 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Base.String #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case System.Environment.getEnv5
                        Paths_LambdaNat.getSysconfDir6
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Maybe.Nothing
                   -> case {__pkg_ccall base-4.12.0.0 GHC.Prim.State#
                                                        GHC.Prim.RealWorld
                                                      -> (# GHC.Prim.State# GHC.Prim.RealWorld,
                                                            GHC.Prim.Word# #)}
                             ipv of wild1 { (#,#) ds ds2 ->
                      case GHC.Prim.narrow32Word# ds2 of wild2 {
                        DEFAULT
                        -> GHC.Windows.failIf2
                             @ GHC.Base.String
                             System.Environment.getEnv3
                             ds
                        203##
                        -> System.Environment.getEnv2 Paths_LambdaNat.getSysconfDir6 ds } }
                   GHC.Maybe.Just x -> (# ipv, x #) } }) -}
32442273b5d9565a23a9f01fc6f8ecf8
  getSysconfDir6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   Paths_LambdaNat.getSysconfDir7) -}
bb7bf948309ebcf94cfde7fe2518ba62
  getSysconfDir7 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("LambdaNat_sysconfdir"#) -}
5bb73417cfe1f828f14f050606d05fdb
  version :: Data.Version.Version
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Data.Version.Version
                   Paths_LambdaNat.version1
                   (GHC.Types.[] @ GHC.Base.String)) -}
1f8f533e7ad086b64a58360a89fb39a5
  version1 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_LambdaNat.version5
                   Paths_LambdaNat.version2) -}
28a5bb3cf81cd82cbab8706059ba7199
  version2 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_LambdaNat.version6
                   Paths_LambdaNat.version3) -}
bc783929392e468a03e9960e1209b0ff
  version3 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_LambdaNat.version5
                   Paths_LambdaNat.version4) -}
c7732243889244ce23e47edac36afd6f
  version4 :: [GHC.Types.Int]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Int
                   Paths_LambdaNat.version5
                   (GHC.Types.[] @ GHC.Types.Int)) -}
6d87f5328d2a3b38ce0e90b9a5021e67
  version5 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
a17d0940cf566272f3d5843104992d88
  version6 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 1#) -}
trusted: safe
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

