
==================== FINAL INTERFACE ====================
2019-10-02 23:59:45.3363532 UTC

interface main:Main 8064
  interface hash: 86ce30784abdc6f53b84ca56c5a4e85e
  ABI hash: 84b537603c4f1c3600cb46f94e72c8aa
  export-list hash: 80244097bbb9bf37d3c202a853c8fc08
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 49ce62cfd10a844dacc5b2eb107a3f0b
  opt_hash: 6faf2de08de32d19db9870899d88e59a
  hpc_hash: 93b885adfe0da089cdf634904fd59f71
  plugin_hash: ad164012d6b1e14942349d58b1132007
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: LambdaNat-0.1.0.0 array-0.5.3.0 base-4.12.0.0
                      containers-0.6.0.1 deepseq-1.4.4.0 ghc-boot-th-8.6.4 ghc-prim-0.5.3
                      integer-gmp-1.0.2.0 pretty-1.1.3.6 template-haskell-2.14.0.0
                      transformers-0.5.6.2 traverse-with-class-1.0.0.0
orphans: LambdaNat-0.1.0.0:Interpreter
         traverse-with-class-1.0.0.0:Data.Generics.Traversable.Instances
         base-4.12.0.0:GHC.Float base-4.12.0.0:GHC.Base
family instance modules: base-4.12.0.0:Control.Applicative
                         base-4.12.0.0:Data.Complex base-4.12.0.0:Data.Functor.Compose
                         base-4.12.0.0:Data.Functor.Const
                         base-4.12.0.0:Data.Functor.Identity
                         base-4.12.0.0:Data.Functor.Product base-4.12.0.0:Data.Functor.Sum
                         base-4.12.0.0:Data.Monoid base-4.12.0.0:Data.Semigroup
                         base-4.12.0.0:Data.Semigroup.Internal base-4.12.0.0:Data.Version
                         base-4.12.0.0:Data.Void base-4.12.0.0:GHC.Exts
                         base-4.12.0.0:GHC.Generics base-4.12.0.0:GHC.IO.Exception
                         containers-0.6.0.1:Data.Map.Internal
                         containers-0.6.0.1:Data.Set.Internal
                         ghc-boot-th-8.6.4:GHC.ForeignSrcLang.Type
                         ghc-boot-th-8.6.4:GHC.LanguageExtensions.Type
                         pretty-1.1.3.6:Text.PrettyPrint.Annotated.HughesPJ
                         pretty-1.1.3.6:Text.PrettyPrint.HughesPJ
                         template-haskell-2.14.0.0:Language.Haskell.TH.Syntax
import  -/  LambdaNat-0.1.0.0:AbsLambdaNat 178a9cc653dd36fa76d6d95a625074d6
import  -/  LambdaNat-0.1.0.0:ErrM 8ba030ed343d705e2fc1649fd6f9d7eb
import  -/  LambdaNat-0.1.0.0:Interpreter d7b0cb5961655ad47cab6ea053b963f5
import  -/  LambdaNat-0.1.0.0:LexLambdaNat b817cae2e1576bcdc18ce6ed83e0d8b7
import  -/  LambdaNat-0.1.0.0:ParLambdaNat 3f2dc37d0ce10603840b7a7c7c7b8255
import  -/  LambdaNat-0.1.0.0:PrintLambdaNat 7837347bbebb8aebfbf16ca512fecddf
import  -/  base-4.12.0.0:Control.Monad be24c6211d7cb61f18d2854428d9a69e
import  -/  base-4.12.0.0:Data.Foldable 6673f41a7644ecd4dda455d741d47ef8
import  -/  base-4.12.0.0:Data.OldList cd51cf46346202f55e4ecde7f0f7b58e
import  -/  base-4.12.0.0:GHC.Base 954f4c258d193fab7048a63bfeb56dcf
import  -/  base-4.12.0.0:GHC.IO 83f83859bdb7dbbe970dd7fd763b40dc
import  -/  base-4.12.0.0:GHC.Show 48dce8b8129312101170e57c24f3ecbd
import  -/  base-4.12.0.0:Prelude aea9afd24db8aed3563d7d850ea453c0
import  -/  base-4.12.0.0:System.Environment 15515764821c8512acc49c05e436e6d4
import  -/  base-4.12.0.0:System.Exit a9a516a6f7156d1805324e8ca40bf315
import  -/  base-4.12.0.0:System.IO ef7039badfa76f34317e352d4f124933
import  -/  ghc-prim-0.5.3:GHC.Classes 6002495dc43e58d28c87e5e5e058752a
import  -/  ghc-prim-0.5.3:GHC.Types 57064c9f957b09bc2e360061ad5cae0b
be86c9d078d3acbf19ba91fe74a24273
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule3 Main.$trModule1) -}
b09d86f2c49dd5176b544d8d13ddb6c5
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule2) -}
e5875966b74dad2d29772660b8a75e33
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Main"#) -}
23b03bd7d075a00f5ad1ee10e6add7b8
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS Main.$trModule4) -}
d026be77cb9ced20e35a61514e0458aa
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("main"#) -}
934124fd9373e7b7acb62cf1e32a27f2
  type ParseFun a = [LexLambdaNat.Token] -> ErrM.Err a
4accfb08b3f50eab5f429c59d8e6b699
  type Verbosity = GHC.Types.Int
3ce4e0e3d441dc69669c8bd89c931469
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
bd8eb61da458c1158245c524a59299c1
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld) ->
                 case (Foreign.Marshal.Alloc.allocaBytesAligned
                         @ Foreign.C.Types.CInt
                         @ [GHC.Base.String]
                         Foreign.Storable.$fStorableBool7
                         Foreign.Storable.$fStorableBool7
                         System.Environment.getArgs1
                           `cast`
                         (<GHC.Ptr.Ptr Foreign.C.Types.CInt>_R
                          ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)))
                        `cast`
                      (GHC.Types.N:IO[0] <[GHC.Base.String]>_R)
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   []
                   -> case GHC.IO.Handle.Text.hGetContents1
                             GHC.IO.Handle.FD.stdin
                             ipv of ds2 { (#,#) ipv2 ipv3 ->
                      Main.main8 Main.main7 ParLambdaNat.pProgram ipv3 ipv2 }
                   : ds ds2
                   -> let {
                        fail :: GHC.Prim.Void#
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                          <join 1> {- Arity: 1, Strictness: <L,A> -}
                        = \ (ds3 :: GHC.Prim.Void#)[OneShot] ->
                          case GHC.Base.eqString
                                 ds
                                 (GHC.CString.unpackCString# Main.main6) of wild1 {
                            GHC.Types.False -> Main.main5 wild ipv
                            GHC.Types.True -> Main.main4 ds2 ipv }
                      } in
                      case GHC.Base.eqString
                             ds
                             (GHC.CString.unpackCString# Main.main3) of wild1 {
                        GHC.Types.False -> fail GHC.Prim.void#
                        GHC.Types.True
                        -> case ds2 of wild2 {
                             [] -> Main.main2 ipv : ipv2 ipv3 -> fail GHC.Prim.void# } } } }) -}
27fec5d9145264a72808e8b895e78f0e
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U> -}
c9f0255180863b63ad4dc3785e4b6b7c
  main3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("--help"#) -}
45f5f6f4bcf9bf02cf1f94dd1b237bf5
  main4 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
c26642c73b5b0bf03b027ef0fff76b15
  main5 ::
    [GHC.IO.FilePath]
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <S,1*U><S,U> -}
80f213d8e526ba696c8fa332be92868a
  main6 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("-s"#) -}
15afd4a775bf0f6176a60da88b7d7f05
  main7 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 2#) -}
0cdb6bc6911df33d9538fc59f7f79d7c
  main8 ::
    Main.Verbosity
    -> Main.ParseFun AbsLambdaNat.Program
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, Strictness: <L,1*U(U)><C(S),1*C1(U)><L,U><S,U> -}
a8156bbbc2fe9e00b2e544e8378b94cf
  main9 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
trusted: none
require own pkg trusted: False
module header:
  Nothing
declaration docs:
arg docs:

